import { ModelManager } from './ModelManager';
/**
 * Broadcast an event to indicate the page model has been loaded
 * @param model - model item to be added to the broadcast payload
 * @fires cq-pagemodel-loaded
 * @private
 */
export declare function triggerPageModelLoaded(model: any): void;
/**
 * The EditorClient is responsible for the interactions with the Page Editor.
 * @private
 */
export declare class EditorClient {
    _modelManager: ModelManager;
    _windowListener: any;
    constructor(modelManager: ModelManager);
    /**
     * Updates the page model with the given data
     *
     * @param {Object} msg - Object containing the data to update the page model
     * @property {String} msg.dataPath - Relative data path in the PageModel which needs to be updated
     * @property {String} msg.pagePath - Absolute page path corresponding to the page in the PageModel which needs to be updated
     * @param {String} msg.cmd - Command Action requested via Editable on the content Node
     * @param {Object} msg.data - Data that needs to be updated in the PageModel at {path}
     * @fires cq-pagemodel-loaded
     * @private
     */
    _updateModel(msg: any): void;
    /**
     * @private
     */
    destroy(): void;
}
//# sourceMappingURL=EditorClient.d.ts.map